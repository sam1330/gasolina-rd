
type Query {
    test_results(filters: TestResultsFilters): [TestResultQuery]
}


# MUTATION (Include this section)
type Mutation {
    createTestResult(data: TestResultInput!): String
}

type TestResult {
    id: ID
    uuid: String
    ron: Float
    plumb: Float
    sulfur: Float
    color: String
    observations: String
    gas_type_id: Int
    establishment_id: Int
    date: String!
}

type GasType {
    name: String
}

type TestResultQuery {
    id: String
    ron: Float
    plumb: Float
    sulfur: Float
    color: String
    observations: String
    gas_type_name: String
    establishment_name: String
    establishment_address: String
    date: String
    formatted_date: String
}

input TestResultsFilters {
    search: String
    gasType: String
    city: String
    dateRange: [String]
}

input TestResultInput {
    ron: Float
    plumb: Float
    sulfur: Float
    color: String
    observations: String
    gas_type_id: String
    establishment_id: String!
    date: String!
}